import "EMBED/unpack" as split
import "../../circuits/constants/H" as H
import "../../circuits/constants/G" as G
import "../../circuits/ecMul" as ecMul
import "../../circuits/mmr/peakBagging" as peakBagging
import "../../circuits/mmr/peakUpdate" as peakUpdate
import "../../circuits/mmr/mmrRollUp1" as mmrRollUp1
import "../../circuits/mmr/mmrRollUp2" as mmrRollUp2
import "../../circuits/mmr/zkMMRInclusion" as zkMMRInclusion

def testPeakBagging() -> (field):
    field width = 6
    field[16] xPeaks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2428626650184648796847295815792291485323435483188111910826971380667428723311, 11748036247587471867187380200533585033574297049591253638976506546712031958129, 0]
    field[16] yPeaks = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18812861181633447282303015878334981162947650039118080340511511143185309897636, 19246390505584674691590444206389394820236647914227142644330779856046495429820, 1]
    root = peakBagging(xPeaks, yPeaks)
    root == 14415532785828178771065438131761688496003626921624859809063277211218798033667
    return 1

def testPeakUpdate() -> (field):
    field width = 5
    field[16] xPeaks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2428626650184648796847295815792291485323435483188111910826971380667428723311, 0, 902959431072933348133107854617308867462238587030065534761733358585699074510]
    field[16] yPeaks = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18812861181633447282303015878334981162947650039118080340511511143185309897636, 1, 3289497303777841790598249219783304488421625480858592021859913252312140533902]
    field[2] item = [10491316709638549424102813047717062893726301022349030777471519052656004564596, 2403727092602280703826243767824091897506875624452025541044133626015463016309]
    field[16] newXPeaks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2428626650184648796847295815792291485323435483188111910826971380667428723311, 11748036247587471867187380200533585033574297049591253638976506546712031958129, 0]
    field[16] newYPeaks = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18812861181633447282303015878334981162947650039118080340511511143185309897636, 19246390505584674691590444206389394820236647914227142644330779856046495429820, 1]
    xPeaks, yPeaks = peakUpdate(width, xPeaks, yPeaks, item)
    xPeaks == newXPeaks
    yPeaks == newYPeaks
    return 1

def testRollUp() -> (field):
    field[2] g = G()
    field[2] item_1 = ecMul(1, g)
    field[2] item_2 = ecMul(2, g)
    field[2] item_3 = ecMul(3, g)
    field[2] item_4 = ecMul(4, g)
    field[2] item_5 = ecMul(5, g)
    field[2] item_6 = ecMul(6, g)

    field width = 5
    field root = 5550496075707336652358693988988589422008221237591248997259517046840417172195
    field[16] xPeaks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2428626650184648796847295815792291485323435483188111910826971380667428723311, 0, 902959431072933348133107854617308867462238587030065534761733358585699074510]
    field[16] yPeaks = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18812861181633447282303015878334981162947650039118080340511511143185309897636, 1, 3289497303777841790598249219783304488421625480858592021859913252312140533902]

    field expectedRoot = 14415532785828178771065438131761688496003626921624859809063277211218798033667
    field newRoot = mmrRollUp1(root, width, xPeaks, yPeaks, item_6)
    newRoot == expectedRoot
    return 1

def testRollUp2() -> (field):
    field[2] g = G()
    field[2] item_1 = ecMul(1, g)
    field[2] item_2 = ecMul(2, g)
    field[2] item_3 = ecMul(3, g)
    field[2] item_4 = ecMul(4, g)
    field[2] item_5 = ecMul(5, g)
    field[2] item_6 = ecMul(6, g)

    field[2] xItems = [item_5[0], item_6[0]]
    field[2] yItems = [item_5[1], item_6[1]]
    field width = 4
    field root = 13357905671600107588036538451729971982535377352777157312903383465956866110605
    field[16] xPeaks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2428626650184648796847295815792291485323435483188111910826971380667428723311, 0, 0]
    field[16] yPeaks = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18812861181633447282303015878334981162947650039118080340511511143185309897636, 1, 1]

    field expectedRoot = 14415532785828178771065438131761688496003626921624859809063277211218798033667
    field newRoot = mmrRollUp2(root, width, xPeaks, yPeaks, xItems, yItems)
    newRoot == expectedRoot
    return 1

def testInclusionProof() -> (field):
    field tag = 14491680315471636907755602413083290121075139985873852266585959448729481987981
    field[16] xPeaks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2428626650184648796847295815792291485323435483188111910826971380667428723311, 11748036247587471867187380200533585033574297049591253638976506546712031958129, 0]
    field[16] yPeaks = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18812861181633447282303015878334981162947650039118080340511511143185309897636, 19246390505584674691590444206389394820236647914227142644330779856046495429820, 1]
    field root = peakBagging(xPeaks, yPeaks)
    field position = 2
    field r = 2
    field v = 0
    field[16] xSiblings = [16540640123574156134436876038791482806971768689494387082833631921987005038935, 16269371994335771667903647423779547991960417034478862923619625111565852026862, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    field[16] ySiblings = [20819045374670962167435360035096875258406992893633759881276124905556507972311, 6835106577460167905435964986907665727665162790716770364715741094434047066500, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    1 == zkMMRInclusion(root, tag, xPeaks, yPeaks, position, r, v, xSiblings, ySiblings)
    return 1

def main() -> (field):
    1 == testPeakBagging()
    1 == testPeakUpdate()
    1 == testRollUp2()
    1 == testInclusionProof()
    return 1
